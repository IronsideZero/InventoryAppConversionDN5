// <auto-generated />
using System;
using InventoryAppConversion.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoryAppConversionDN5.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220401221959_Refactor")]
    partial class Refactor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("InventoryAppConversion.Models.Category", b =>
                {
                    b.Property<int?>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Models.Company", b =>
                {
                    b.Property<int?>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.HasKey("CompanyId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<string>("OwnerEmail")
                        .HasColumnType("varchar(767)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OwnerEmail");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(767)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("RegistrationKey")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.Item", b =>
                {
                    b.HasOne("InventoryAppConversion.Models.Category", "Category")
                        .WithMany("ItemList")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerEmail");

                    b.Navigation("Category");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.HasOne("Models.Company", "Company")
                        .WithMany("UserList")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Models.Role", "Role")
                        .WithMany("UserList")
                        .HasForeignKey("RoleId");

                    b.Navigation("Company");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("InventoryAppConversion.Models.Category", b =>
                {
                    b.Navigation("ItemList");
                });

            modelBuilder.Entity("Models.Company", b =>
                {
                    b.Navigation("UserList");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Navigation("UserList");
                });
#pragma warning restore 612, 618
        }
    }
}
